{"version":3,"file":"useNetworkPlugin.js","sourceRoot":"","sources":["../../src/useNetworkPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { useDevToolsPluginClient, type EventSubscription } from \"expo/devtools\";\nimport { useEffect, useState } from \"react\";\n\nimport { MessageString } from \"../common/types\";\n\nexport function useNetworkPlugin() {\n  // TODO: bp - Make useDevToolsPluginClient take a generic type that can be used to get strong type-safety for all its methods\n  const client = useDevToolsPluginClient(\"network-plugin\");\n  const [interceptUrl, setInterceptUrl] = useState(\"\");\n  const [statusCode, setStatusCode] = useState(0);\n  const [responseBody, setResponseBody] = useState(\"\");\n  const [responseHeaders, setResponseHeaders] = useState(\"\");\n  const [responseDelay, setResponseDelay] = useState(0);\n\n  useEffect(() => {\n    const subscriptions: EventSubscription[] = [];\n\n    subscriptions.push(\n      client?.addMessageListener?.(MessageString.SET_ENDPOINT, (data) => {\n        setInterceptUrl(data.endpoint);\n      }),\n      client?.addMessageListener?.(MessageString.RESET_ENDPOINT, () => {\n        setInterceptUrl(\"\");\n      }),\n      client?.addMessageListener?.(MessageString.SET_STATUS_CODE, (data) => {\n        setStatusCode(parseInt(data.statusCode, 10));\n      }),\n      client?.addMessageListener?.(MessageString.RESET_STATUS_CODE, () => {\n        setStatusCode(0);\n      }),\n      client?.addMessageListener?.(MessageString.SET_BODY, (data) => {\n        setResponseBody(data.body);\n      }),\n      client?.addMessageListener?.(MessageString.RESET_BODY, () => {\n        setResponseBody(\"\");\n      }),\n      client?.addMessageListener?.(MessageString.SET_HEADERS, (data) => {\n        setResponseHeaders(data.headers);\n      }),\n      client?.addMessageListener?.(MessageString.RESET_HEADERS, () => {\n        setResponseHeaders(\"\");\n      }),\n      client?.addMessageListener?.(MessageString.SET_DELAY, (data) => {\n        setResponseDelay(parseInt(data.delay, 10));\n      }),\n      client?.addMessageListener?.(MessageString.RESET_DELAY, () => {\n        setResponseDelay(0);\n      }),\n    );\n\n    return () => {\n      for (const subscription of subscriptions) {\n        subscription?.remove();\n      }\n    };\n  }, [client]);\n\n  // @ts-ignore\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  return {\n    interceptUrl,\n    setInterceptUrl,\n    statusCode,\n    setStatusCode,\n    responseBody,\n    setResponseBody,\n    responseHeaders,\n    setResponseHeaders,\n    responseDelay,\n    setResponseDelay,\n  };\n}\n"]}