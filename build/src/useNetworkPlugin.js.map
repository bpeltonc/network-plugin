{"version":3,"file":"useNetworkPlugin.js","sourceRoot":"","sources":["../../src/useNetworkPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { useDevToolsPluginClient, type EventSubscription } from \"expo/devtools\";\nimport { useEffect, useState } from \"react\";\n\nimport {\n  MessagePayloadWithFrom,\n  MessageString,\n  ResponseHeaders,\n} from \"../common/types\";\n\nexport function useNetworkPlugin() {\n  // TODO: bp - Make useDevToolsPluginClient take a generic type that can be used to get strong type-safety for all its methods\n  const client = useDevToolsPluginClient(\"network-plugin\");\n  const [interceptUrl, setInterceptUrl] = useState(\"\");\n  const [statusCode, setStatusCode] = useState(0);\n  const [responseBody, setResponseBody] = useState(\"\");\n  const [responseHeaders, setResponseHeaders] = useState<ResponseHeaders[]>([]);\n  const [responseDelay, setResponseDelay] = useState(0);\n\n  // Make it explicit that we don't have strong type-safety for addMessageListener\n  const unsafe_addMessageListener = client?.addMessageListener;\n\n  useEffect(() => {\n    const subscriptions: EventSubscription[] = [];\n\n    subscriptions.push(\n      unsafe_addMessageListener?.(\n        MessageString.PING,\n        // TODO: bp - This isn't REALLY unsafe since we know the sender has type-safety for params at the call site\n        (data: MessagePayloadWithFrom<MessageString.PING>) => {\n          alert(`Received ping from ${data.from}`);\n        },\n      ),\n      unsafe_addMessageListener?.(\n        MessageString.SET_ENDPOINT,\n        (data: MessagePayloadWithFrom<MessageString.SET_ENDPOINT>) => {\n          setInterceptUrl(data.params.endpoint);\n        },\n      ),\n      unsafe_addMessageListener?.(\n        MessageString.SET_STATUS_CODE,\n        (data: MessagePayloadWithFrom<MessageString.SET_STATUS_CODE>) => {\n          setStatusCode(parseInt(data.params.statusCode, 10));\n        },\n      ),\n      unsafe_addMessageListener?.(\n        MessageString.SET_BODY,\n        (data: MessagePayloadWithFrom<MessageString.SET_BODY>) => {\n          setResponseBody(data.params.body);\n        },\n      ),\n      unsafe_addMessageListener?.(\n        MessageString.SET_HEADERS,\n        (data: MessagePayloadWithFrom<MessageString.SET_HEADERS>) => {\n          try {\n            setResponseHeaders(JSON.parse(data.params.headers));\n          } catch {\n            setResponseHeaders([]);\n            console.error(\"Failed to parse response headers\");\n          }\n        },\n      ),\n      unsafe_addMessageListener?.(\n        MessageString.SET_DELAY,\n        (data: MessagePayloadWithFrom<MessageString.SET_DELAY>) => {\n          setResponseDelay(parseInt(data.params.delay, 10));\n        },\n      ),\n    );\n    client?.sendMessage(MessageString.PING, { from: \"app\" });\n\n    return () => {\n      for (const subscription of subscriptions) {\n        subscription?.remove();\n      }\n    };\n  }, [client]);\n\n  // @ts-ignore\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  return {\n    interceptUrl,\n    setInterceptUrl,\n    statusCode,\n    setStatusCode,\n    responseBody,\n    setResponseBody,\n    responseHeaders,\n    setResponseHeaders,\n    responseDelay,\n    setResponseDelay,\n  };\n}\n"]}